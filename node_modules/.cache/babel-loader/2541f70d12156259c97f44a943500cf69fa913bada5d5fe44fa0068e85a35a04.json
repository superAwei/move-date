{"ast":null,"code":"import { ref, onMounted, onUnmounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { auth, rtdb } from '@/firebase';\nimport { ref as dbRef, push, onChildAdded, off } from 'firebase/database';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '@/firebase';\nexport default {\n  name: 'ChatView',\n  setup() {\n    const route = useRoute();\n    const matchId = route.params.id;\n    const currentUser = auth.currentUser;\n    const messages = ref([]);\n    const newMessage = ref('');\n    const matchEmail = ref('');\n    const chatRef = dbRef(rtdb, `chats/${currentUser.uid}_${matchId}`);\n    onMounted(async () => {\n      onChildAdded(chatRef, snapshot => {\n        messages.value.push(snapshot.val());\n      });\n\n      // Fetch match email\n      const matchDoc = await getDoc(doc(db, 'users', matchId));\n      if (matchDoc.exists()) {\n        matchEmail.value = matchDoc.data().email;\n      }\n    });\n    onUnmounted(() => {\n      off(chatRef);\n    });\n    const sendMessage = () => {\n      if (newMessage.value.trim()) {\n        push(chatRef, {\n          text: newMessage.value,\n          sender: currentUser.uid,\n          timestamp: Date.now()\n        });\n        newMessage.value = '';\n      }\n    };\n    return {\n      messages,\n      newMessage,\n      sendMessage,\n      matchEmail,\n      currentUser\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","useRoute","auth","rtdb","dbRef","push","onChildAdded","off","doc","getDoc","db","name","setup","route","matchId","params","id","currentUser","messages","newMessage","matchEmail","chatRef","uid","snapshot","value","val","matchDoc","exists","data","email","sendMessage","trim","text","sender","timestamp","Date","now"],"sources":["/Users/awei/Desktop/movie dating/src/views/Chat.vue"],"sourcesContent":["<template>\n  <div class=\"chat\">\n    <h2>Chat with {{ matchEmail }}</h2>\n    <div class=\"messages\">\n      <div v-for=\"message in messages\" :key=\"message.id\" :class=\"['message', message.sender === currentUser.uid ? 'sent' : 'received']\">\n        {{ message.text }}\n      </div>\n    </div>\n    <form @submit.prevent=\"sendMessage\">\n      <input v-model=\"newMessage\" placeholder=\"Type a message...\">\n      <button type=\"submit\">Send</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, onUnmounted } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { auth, rtdb } from '@/firebase'\nimport { ref as dbRef, push, onChildAdded, off } from 'firebase/database'\nimport { doc, getDoc } from 'firebase/firestore'\nimport { db } from '@/firebase'\n\nexport default {\n  name: 'ChatView',\n  setup() {\n    const route = useRoute()\n    const matchId = route.params.id\n    const currentUser = auth.currentUser\n    const messages = ref([])\n    const newMessage = ref('')\n    const matchEmail = ref('')\n\n    const chatRef = dbRef(rtdb, `chats/${currentUser.uid}_${matchId}`)\n\n    onMounted(async () => {\n      onChildAdded(chatRef, (snapshot) => {\n        messages.value.push(snapshot.val())\n      })\n\n      // Fetch match email\n      const matchDoc = await getDoc(doc(db, 'users', matchId))\n      if (matchDoc.exists()) {\n        matchEmail.value = matchDoc.data().email\n      }\n    })\n\n    onUnmounted(() => {\n      off(chatRef)\n    })\n\n    const sendMessage = () => {\n      if (newMessage.value.trim()) {\n        push(chatRef, {\n          text: newMessage.value,\n          sender: currentUser.uid,\n          timestamp: Date.now()\n        })\n        newMessage.value = ''\n      }\n    }\n\n    return {\n      messages,\n      newMessage,\n      sendMessage,\n      matchEmail,\n      currentUser\n    }\n  }\n}\n</script>\n"],"mappings":"AAgBA,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAU,QAAS,KAAI;AAChD,SAASC,QAAO,QAAS,YAAW;AACpC,SAASC,IAAI,EAAEC,IAAG,QAAS,YAAW;AACtC,SAASL,GAAE,IAAKM,KAAK,EAAEC,IAAI,EAAEC,YAAY,EAAEC,GAAE,QAAS,mBAAkB;AACxE,SAASC,GAAG,EAAEC,MAAK,QAAS,oBAAmB;AAC/C,SAASC,EAAC,QAAS,YAAW;AAE9B,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIZ,QAAQ,CAAC;IACvB,MAAMa,OAAM,GAAID,KAAK,CAACE,MAAM,CAACC,EAAC;IAC9B,MAAMC,WAAU,GAAIf,IAAI,CAACe,WAAU;IACnC,MAAMC,QAAO,GAAIpB,GAAG,CAAC,EAAE;IACvB,MAAMqB,UAAS,GAAIrB,GAAG,CAAC,EAAE;IACzB,MAAMsB,UAAS,GAAItB,GAAG,CAAC,EAAE;IAEzB,MAAMuB,OAAM,GAAIjB,KAAK,CAACD,IAAI,EAAE,SAASc,WAAW,CAACK,GAAG,IAAIR,OAAO,EAAE;IAEjEf,SAAS,CAAC,YAAY;MACpBO,YAAY,CAACe,OAAO,EAAGE,QAAQ,IAAK;QAClCL,QAAQ,CAACM,KAAK,CAACnB,IAAI,CAACkB,QAAQ,CAACE,GAAG,CAAC,CAAC;MACpC,CAAC;;MAED;MACA,MAAMC,QAAO,GAAI,MAAMjB,MAAM,CAACD,GAAG,CAACE,EAAE,EAAE,OAAO,EAAEI,OAAO,CAAC;MACvD,IAAIY,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;QACrBP,UAAU,CAACI,KAAI,GAAIE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACC,KAAI;MACzC;IACF,CAAC;IAED7B,WAAW,CAAC,MAAM;MAChBO,GAAG,CAACc,OAAO;IACb,CAAC;IAED,MAAMS,WAAU,GAAIA,CAAA,KAAM;MACxB,IAAIX,UAAU,CAACK,KAAK,CAACO,IAAI,CAAC,CAAC,EAAE;QAC3B1B,IAAI,CAACgB,OAAO,EAAE;UACZW,IAAI,EAAEb,UAAU,CAACK,KAAK;UACtBS,MAAM,EAAEhB,WAAW,CAACK,GAAG;UACvBY,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;QACtB,CAAC;QACDjB,UAAU,CAACK,KAAI,GAAI,EAAC;MACtB;IACF;IAEA,OAAO;MACLN,QAAQ;MACRC,UAAU;MACVW,WAAW;MACXV,UAAU;MACVH;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}