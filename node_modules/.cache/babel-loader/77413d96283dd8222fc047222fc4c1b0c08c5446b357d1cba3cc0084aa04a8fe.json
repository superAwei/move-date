{"ast":null,"code":"import { ref } from 'vue';\nimport { auth, db } from '@/firebase';\nimport { doc, updateDoc, arrayUnion } from 'firebase/firestore';\nconst API_KEY = '392f3431bc009e57f5dc58f12e4949ee';\nconst API_URL = 'https://api.themoviedb.org/3';\nconst ACCESS_TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzOTJmMzQzMWJjMDA5ZTU3ZjVkYzU4ZjEyZTQ5NDllZSIsIm5iZiI6MTcyODk1Nzg5NC4zMzY4NDMsInN1YiI6IjY2ZGQ0ODcyYzAwN2I0NGZhODlkZDhjNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cEm5M_SCbPFMKfIoduGk9CARGK4ykjvzcU6LCm0E1-E';\nexport default {\n  name: 'MovieBrowser',\n  setup() {\n    const movies = ref([]);\n    const searchQuery = ref('');\n    const searchMovies = async () => {\n      if (searchQuery.value.length > 2) {\n        try {\n          const response = await fetch(`${API_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery.value}`, {\n            headers: {\n              'Authorization': `Bearer ${ACCESS_TOKEN}`,\n              'Content-Type': 'application/json;charset=utf-8'\n            }\n          });\n          const data = await response.json();\n          movies.value = data.results;\n        } catch (error) {\n          console.error('Error searching movies:', error);\n        }\n      }\n    };\n    const addToPreferences = async genreIds => {\n      const user = auth.currentUser;\n      if (user) {\n        const userRef = doc(db, 'users', user.uid);\n        await updateDoc(userRef, {\n          moviePreferences: arrayUnion(...genreIds)\n        });\n        alert('Preferences updated!');\n      } else {\n        alert('Please sign in to update preferences');\n      }\n    };\n    const getImageUrl = path => {\n      return path ? `https://image.tmdb.org/t/p/w500${path}` : 'path/to/placeholder/image.jpg';\n    };\n    return {\n      movies,\n      searchQuery,\n      searchMovies,\n      addToPreferences,\n      getImageUrl\n    };\n  }\n};","map":{"version":3,"names":["ref","auth","db","doc","updateDoc","arrayUnion","API_KEY","API_URL","ACCESS_TOKEN","name","setup","movies","searchQuery","searchMovies","value","length","response","fetch","headers","data","json","results","error","console","addToPreferences","genreIds","user","currentUser","userRef","uid","moviePreferences","alert","getImageUrl","path"],"sources":["/Users/awei/Desktop/movie dating/src/views/MovieBrowser.vue"],"sourcesContent":["<template>\n  <div class=\"movie-browser\">\n    <h2>Movie Browser</h2>\n    <input v-model=\"searchQuery\" @input=\"searchMovies\" placeholder=\"Search movies...\">\n    <div class=\"movie-list\">\n      <div v-for=\"movie in movies\" :key=\"movie.id\" class=\"movie-item\">\n        <h3>{{ movie.title }}</h3>\n        <img :src=\"getImageUrl(movie.poster_path)\" :alt=\"movie.title\">\n        <p>{{ movie.overview }}</p>\n        <p>Release Date: {{ movie.release_date }}</p>\n        <button @click=\"addToPreferences(movie.genre_ids)\">Add to Preferences</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { auth, db } from '@/firebase'\nimport { doc, updateDoc, arrayUnion } from 'firebase/firestore'\n\nconst API_KEY = '392f3431bc009e57f5dc58f12e4949ee'\nconst API_URL = 'https://api.themoviedb.org/3'\nconst ACCESS_TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzOTJmMzQzMWJjMDA5ZTU3ZjVkYzU4ZjEyZTQ5NDllZSIsIm5iZiI6MTcyODk1Nzg5NC4zMzY4NDMsInN1YiI6IjY2ZGQ0ODcyYzAwN2I0NGZhODlkZDhjNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cEm5M_SCbPFMKfIoduGk9CARGK4ykjvzcU6LCm0E1-E'\n\nexport default {\n  name: 'MovieBrowser',\n  setup() {\n    const movies = ref([])\n    const searchQuery = ref('')\n\n    const searchMovies = async () => {\n      if (searchQuery.value.length > 2) {\n        try {\n          const response = await fetch(`${API_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery.value}`, {\n            headers: {\n              'Authorization': `Bearer ${ACCESS_TOKEN}`,\n              'Content-Type': 'application/json;charset=utf-8'\n            }\n          })\n          const data = await response.json()\n          movies.value = data.results\n        } catch (error) {\n          console.error('Error searching movies:', error)\n        }\n      }\n    }\n\n    const addToPreferences = async (genreIds) => {\n      const user = auth.currentUser\n      if (user) {\n        const userRef = doc(db, 'users', user.uid)\n        await updateDoc(userRef, {\n          moviePreferences: arrayUnion(...genreIds)\n        })\n        alert('Preferences updated!')\n      } else {\n        alert('Please sign in to update preferences')\n      }\n    }\n\n    const getImageUrl = (path) => {\n      return path ? `https://image.tmdb.org/t/p/w500${path}` : 'path/to/placeholder/image.jpg'\n    }\n\n    return {\n      movies,\n      searchQuery,\n      searchMovies,\n      addToPreferences,\n      getImageUrl\n    }\n  }\n}\n</script>\n\n<style scoped>\n.movie-item {\n  margin-bottom: 20px;\n  border: 1px solid #ddd;\n  padding: 10px;\n}\n\n.movie-item img {\n  max-width: 200px;\n  height: auto;\n}\n</style>\n"],"mappings":"AAiBA,SAASA,GAAE,QAAS,KAAI;AACxB,SAASC,IAAI,EAAEC,EAAC,QAAS,YAAW;AACpC,SAASC,GAAG,EAAEC,SAAS,EAAEC,UAAS,QAAS,oBAAmB;AAE9D,MAAMC,OAAM,GAAI,kCAAiC;AACjD,MAAMC,OAAM,GAAI,8BAA6B;AAC7C,MAAMC,YAAW,GAAI,qPAAoP;AAEzQ,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIX,GAAG,CAAC,EAAE;IACrB,MAAMY,WAAU,GAAIZ,GAAG,CAAC,EAAE;IAE1B,MAAMa,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAID,WAAW,CAACE,KAAK,CAACC,MAAK,GAAI,CAAC,EAAE;QAChC,IAAI;UACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,GAAGV,OAAO,yBAAyBD,OAAO,UAAUM,WAAW,CAACE,KAAK,EAAE,EAAE;YACpGI,OAAO,EAAE;cACP,eAAe,EAAE,UAAUV,YAAY,EAAE;cACzC,cAAc,EAAE;YAClB;UACF,CAAC;UACD,MAAMW,IAAG,GAAI,MAAMH,QAAQ,CAACI,IAAI,CAAC;UACjCT,MAAM,CAACG,KAAI,GAAIK,IAAI,CAACE,OAAM;QAC5B,EAAE,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK;QAChD;MACF;IACF;IAEA,MAAME,gBAAe,GAAI,MAAOC,QAAQ,IAAK;MAC3C,MAAMC,IAAG,GAAIzB,IAAI,CAAC0B,WAAU;MAC5B,IAAID,IAAI,EAAE;QACR,MAAME,OAAM,GAAIzB,GAAG,CAACD,EAAE,EAAE,OAAO,EAAEwB,IAAI,CAACG,GAAG;QACzC,MAAMzB,SAAS,CAACwB,OAAO,EAAE;UACvBE,gBAAgB,EAAEzB,UAAU,CAAC,GAAGoB,QAAQ;QAC1C,CAAC;QACDM,KAAK,CAAC,sBAAsB;MAC9B,OAAO;QACLA,KAAK,CAAC,sCAAsC;MAC9C;IACF;IAEA,MAAMC,WAAU,GAAKC,IAAI,IAAK;MAC5B,OAAOA,IAAG,GAAI,kCAAkCA,IAAI,EAAC,GAAI,+BAA8B;IACzF;IAEA,OAAO;MACLtB,MAAM;MACNC,WAAW;MACXC,YAAY;MACZW,gBAAgB;MAChBQ;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}