{"ast":null,"code":"import { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { auth, db } from '@/firebase';\nimport { signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\nexport default {\n  name: 'SignIn',\n  setup() {\n    const email = ref('');\n    const password = ref('');\n    const router = useRouter();\n    const handleSignIn = async () => {\n      try {\n        await signInWithEmailAndPassword(auth, email.value, password.value);\n        router.push('/profile');\n      } catch (error) {\n        console.error('Error signing in:', error);\n        alert(error.message);\n      }\n    };\n    const handleGoogleSignIn = async () => {\n      const provider = new GoogleAuthProvider();\n      try {\n        const result = await signInWithPopup(auth, provider);\n        await ensureUserDocument(result.user);\n        router.push('/profile');\n      } catch (error) {\n        console.error('Error signing in with Google:', error);\n        alert(error.message);\n      }\n    };\n    const ensureUserDocument = async user => {\n      const userDocRef = doc(db, 'users', user.uid);\n      const userDoc = await getDoc(userDocRef);\n      if (!userDoc.exists()) {\n        await setDoc(userDocRef, {\n          email: user.email,\n          moviePreferences: []\n        });\n      }\n    };\n    return {\n      email,\n      password,\n      handleSignIn,\n      handleGoogleSignIn\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","auth","db","signInWithEmailAndPassword","GoogleAuthProvider","signInWithPopup","doc","setDoc","getDoc","name","setup","email","password","router","handleSignIn","value","push","error","console","alert","message","handleGoogleSignIn","provider","result","ensureUserDocument","user","userDocRef","uid","userDoc","exists","moviePreferences"],"sources":["/Users/awei/Desktop/movie dating/src/views/SignIn.vue"],"sourcesContent":["<template>\n  <div class=\"signin\">\n    <h2>Sign In</h2>\n    <form @submit.prevent=\"handleSignIn\">\n      <input v-model=\"email\" type=\"email\" placeholder=\"Email\" required>\n      <input v-model=\"password\" type=\"password\" placeholder=\"Password\" required>\n      <button type=\"submit\">Sign In</button>\n    </form>\n    <button @click=\"handleGoogleSignIn\">Sign In with Google</button>\n    <p>Don't have an account? <router-link to=\"/signup\">Sign Up</router-link></p>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { auth, db } from '@/firebase'\nimport { signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from 'firebase/auth'\nimport { doc, setDoc, getDoc } from 'firebase/firestore'\n\nexport default {\n  name: 'SignIn',\n  setup() {\n    const email = ref('')\n    const password = ref('')\n    const router = useRouter()\n\n    const handleSignIn = async () => {\n      try {\n        await signInWithEmailAndPassword(auth, email.value, password.value)\n        router.push('/profile')\n      } catch (error) {\n        console.error('Error signing in:', error)\n        alert(error.message)\n      }\n    }\n\n    const handleGoogleSignIn = async () => {\n      const provider = new GoogleAuthProvider()\n      try {\n        const result = await signInWithPopup(auth, provider)\n        await ensureUserDocument(result.user)\n        router.push('/profile')\n      } catch (error) {\n        console.error('Error signing in with Google:', error)\n        alert(error.message)\n      }\n    }\n\n    const ensureUserDocument = async (user) => {\n      const userDocRef = doc(db, 'users', user.uid)\n      const userDoc = await getDoc(userDocRef)\n      if (!userDoc.exists()) {\n        await setDoc(userDocRef, {\n          email: user.email,\n          moviePreferences: []\n        })\n      }\n    }\n\n    return {\n      email,\n      password,\n      handleSignIn,\n      handleGoogleSignIn\n    }\n  }\n}\n</script>\n"],"mappings":"AAcA,SAASA,GAAE,QAAS,KAAI;AACxB,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,IAAI,EAAEC,EAAC,QAAS,YAAW;AACpC,SAASC,0BAA0B,EAAEC,kBAAkB,EAAEC,eAAc,QAAS,eAAc;AAC9F,SAASC,GAAG,EAAEC,MAAM,EAAEC,MAAK,QAAS,oBAAmB;AAEvD,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIZ,GAAG,CAAC,EAAE;IACpB,MAAMa,QAAO,GAAIb,GAAG,CAAC,EAAE;IACvB,MAAMc,MAAK,GAAIb,SAAS,CAAC;IAEzB,MAAMc,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMX,0BAA0B,CAACF,IAAI,EAAEU,KAAK,CAACI,KAAK,EAAEH,QAAQ,CAACG,KAAK;QAClEF,MAAM,CAACG,IAAI,CAAC,UAAU;MACxB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK;QACxCE,KAAK,CAACF,KAAK,CAACG,OAAO;MACrB;IACF;IAEA,MAAMC,kBAAiB,GAAI,MAAAA,CAAA,KAAY;MACrC,MAAMC,QAAO,GAAI,IAAIlB,kBAAkB,CAAC;MACxC,IAAI;QACF,MAAMmB,MAAK,GAAI,MAAMlB,eAAe,CAACJ,IAAI,EAAEqB,QAAQ;QACnD,MAAME,kBAAkB,CAACD,MAAM,CAACE,IAAI;QACpCZ,MAAM,CAACG,IAAI,CAAC,UAAU;MACxB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK;QACpDE,KAAK,CAACF,KAAK,CAACG,OAAO;MACrB;IACF;IAEA,MAAMI,kBAAiB,GAAI,MAAOC,IAAI,IAAK;MACzC,MAAMC,UAAS,GAAIpB,GAAG,CAACJ,EAAE,EAAE,OAAO,EAAEuB,IAAI,CAACE,GAAG;MAC5C,MAAMC,OAAM,GAAI,MAAMpB,MAAM,CAACkB,UAAU;MACvC,IAAI,CAACE,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;QACrB,MAAMtB,MAAM,CAACmB,UAAU,EAAE;UACvBf,KAAK,EAAEc,IAAI,CAACd,KAAK;UACjBmB,gBAAgB,EAAE;QACpB,CAAC;MACH;IACF;IAEA,OAAO;MACLnB,KAAK;MACLC,QAAQ;MACRE,YAAY;MACZO;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}