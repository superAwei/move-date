{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"signin\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"Sign In\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $setup.handleSignIn && $setup.handleSignIn(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.email = $event),\n    type: \"email\",\n    placeholder: \"Email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.email]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n    type: \"password\",\n    placeholder: \"Password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]]), _cache[4] || (_cache[4] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Sign In\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.handleGoogleSignIn && $setup.handleGoogleSignIn(...args))\n  }, \"Sign In with Google\"), _createElementVNode(\"p\", null, [_cache[6] || (_cache[6] = _createTextVNode(\"Don't have an account? \")), _createVNode(_component_router_link, {\n    to: \"/signup\"\n  }, {\n    default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"Sign Up\")])),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$setup","handleSignIn","$event","email","type","placeholder","required","password","onClick","handleGoogleSignIn","_createTextVNode","_createVNode","_component_router_link","to","default","_withCtx","_"],"sources":["/Users/awei/Desktop/movie dating/src/views/SignIn.vue"],"sourcesContent":["<template>\n  <div class=\"signin\">\n    <h2>Sign In</h2>\n    <form @submit.prevent=\"handleSignIn\">\n      <input v-model=\"email\" type=\"email\" placeholder=\"Email\" required>\n      <input v-model=\"password\" type=\"password\" placeholder=\"Password\" required>\n      <button type=\"submit\">Sign In</button>\n    </form>\n    <button @click=\"handleGoogleSignIn\">Sign In with Google</button>\n    <p>Don't have an account? <router-link to=\"/signup\">Sign Up</router-link></p>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { auth, db } from '@/firebase'\nimport { signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from 'firebase/auth'\nimport { doc, setDoc, getDoc } from 'firebase/firestore'\n\nexport default {\n  name: 'SignIn',\n  setup() {\n    const email = ref('')\n    const password = ref('')\n    const router = useRouter()\n\n    const handleSignIn = async () => {\n      try {\n        await signInWithEmailAndPassword(auth, email.value, password.value)\n        router.push('/profile')\n      } catch (error) {\n        console.error('Error signing in:', error)\n        alert(error.message)\n      }\n    }\n\n    const handleGoogleSignIn = async () => {\n      const provider = new GoogleAuthProvider()\n      try {\n        const result = await signInWithPopup(auth, provider)\n        await ensureUserDocument(result.user)\n        router.push('/profile')\n      } catch (error) {\n        console.error('Error signing in with Google:', error)\n        alert(error.message)\n      }\n    }\n\n    const ensureUserDocument = async (user) => {\n      const userDocRef = doc(db, 'users', user.uid)\n      const userDoc = await getDoc(userDocRef)\n      if (!userDoc.exists()) {\n        await setDoc(userDocRef, {\n          email: user.email,\n          moviePreferences: []\n        })\n      }\n    }\n\n    return {\n      email,\n      password,\n      handleSignIn,\n      handleGoogleSignIn\n    }\n  }\n}\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAQ;;;uBAAnBC,mBAAA,CASM,OATNC,UASM,G,0BARJC,mBAAA,CAAgB,YAAZ,SAAO,sBACXA,mBAAA,CAIO;IAJAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;sBACjCJ,mBAAA,CAAiE;IAJvE,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAIsBF,MAAA,CAAAG,KAAK,GAAAD,MAAA;IAAEE,IAAI,EAAC,OAAO;IAACC,WAAW,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAAxCN,MAAA,CAAAG,KAAK,E,mBACrBR,mBAAA,CAA0E;IALhF,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAKsBF,MAAA,CAAAO,QAAQ,GAAAL,MAAA;IAAEE,IAAI,EAAC,UAAU;IAACC,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAAjDN,MAAA,CAAAO,QAAQ,E,6BACxBZ,mBAAA,CAAsC;IAA9BS,IAAI,EAAC;EAAQ,GAAC,SAAO,qB,4BAE/BT,mBAAA,CAAgE;IAAvDa,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,MAAA,CAAAS,kBAAA,IAAAT,MAAA,CAAAS,kBAAA,IAAAV,IAAA,CAAkB;KAAE,qBAAmB,GACvDJ,mBAAA,CAA6E,Y,0BATjFe,gBAAA,CASO,yBAAuB,IAAAC,YAAA,CAA+CC,sBAAA;IAAlCC,EAAE,EAAC;EAAS;IATvDC,OAAA,EAAAC,QAAA,CASwD,MAAOlB,MAAA,QAAAA,MAAA,OAT/Da,gBAAA,CASwD,SAAO,E;IAT/DM,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}