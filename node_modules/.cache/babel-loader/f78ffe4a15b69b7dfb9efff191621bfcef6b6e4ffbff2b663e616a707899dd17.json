{"ast":null,"code":"import { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { auth, db } from '@/firebase';\nimport { createUserWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { doc, setDoc } from 'firebase/firestore';\nexport default {\n  name: 'SignUpView',\n  setup() {\n    const email = ref('');\n    const password = ref('');\n    const router = useRouter();\n    const handleSignUp = async () => {\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, email.value, password.value);\n        await createUserDocument(userCredential.user);\n        alert('Sign up successful!');\n        router.push('/profile');\n      } catch (error) {\n        console.error('Error signing up:', error);\n        alert(error.message);\n      }\n    };\n    const handleGoogleSignUp = async () => {\n      const provider = new GoogleAuthProvider();\n      try {\n        const result = await signInWithPopup(auth, provider);\n        await createUserDocument(result.user);\n        alert('Google sign up successful!');\n        router.push('/profile');\n      } catch (error) {\n        console.error('Error signing up with Google:', error);\n        alert(error.message);\n      }\n    };\n    const createUserDocument = async user => {\n      await setDoc(doc(db, 'users', user.uid), {\n        email: user.email,\n        moviePreferences: []\n      });\n    };\n    return {\n      email,\n      password,\n      handleSignUp,\n      handleGoogleSignUp\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","auth","db","createUserWithEmailAndPassword","GoogleAuthProvider","signInWithPopup","doc","setDoc","name","setup","email","password","router","handleSignUp","userCredential","value","createUserDocument","user","alert","push","error","console","message","handleGoogleSignUp","provider","result","uid","moviePreferences"],"sources":["/Users/awei/Desktop/movie dating/src/views/SignUp.vue"],"sourcesContent":["<template>\n  <div class=\"signup\">\n    <h2>Sign Up</h2>\n    <form @submit.prevent=\"handleSignUp\">\n      <input v-model=\"email\" type=\"email\" placeholder=\"Email\" required>\n      <input v-model=\"password\" type=\"password\" placeholder=\"Password\" required>\n      <button type=\"submit\">Sign Up</button>\n    </form>\n    <button @click=\"handleGoogleSignUp\">Sign Up with Google</button>\n    <p>Already have an account? <router-link to=\"/signin\">Sign In</router-link></p>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { auth, db } from '@/firebase'\nimport { createUserWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from 'firebase/auth'\nimport { doc, setDoc } from 'firebase/firestore'\n\nexport default {\n  name: 'SignUpView',\n  setup() {\n    const email = ref('')\n    const password = ref('')\n    const router = useRouter()\n\n    const handleSignUp = async () => {\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, email.value, password.value)\n        await createUserDocument(userCredential.user)\n        alert('Sign up successful!')\n        router.push('/profile')\n      } catch (error) {\n        console.error('Error signing up:', error)\n        alert(error.message)\n      }\n    }\n\n    const handleGoogleSignUp = async () => {\n      const provider = new GoogleAuthProvider()\n      try {\n        const result = await signInWithPopup(auth, provider)\n        await createUserDocument(result.user)\n        alert('Google sign up successful!')\n        router.push('/profile')\n      } catch (error) {\n        console.error('Error signing up with Google:', error)\n        alert(error.message)\n      }\n    }\n\n    const createUserDocument = async (user) => {\n      await setDoc(doc(db, 'users', user.uid), {\n        email: user.email,\n        moviePreferences: []\n      })\n    }\n\n    return {\n      email,\n      password,\n      handleSignUp,\n      handleGoogleSignUp\n    }\n  }\n}\n</script>\n"],"mappings":"AAcA,SAASA,GAAE,QAAS,KAAI;AACxB,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,IAAI,EAAEC,EAAC,QAAS,YAAW;AACpC,SAASC,8BAA8B,EAAEC,kBAAkB,EAAEC,eAAc,QAAS,eAAc;AAClG,SAASC,GAAG,EAAEC,MAAK,QAAS,oBAAmB;AAE/C,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIX,GAAG,CAAC,EAAE;IACpB,MAAMY,QAAO,GAAIZ,GAAG,CAAC,EAAE;IACvB,MAAMa,MAAK,GAAIZ,SAAS,CAAC;IAEzB,MAAMa,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,cAAa,GAAI,MAAMX,8BAA8B,CAACF,IAAI,EAAES,KAAK,CAACK,KAAK,EAAEJ,QAAQ,CAACI,KAAK;QAC7F,MAAMC,kBAAkB,CAACF,cAAc,CAACG,IAAI;QAC5CC,KAAK,CAAC,qBAAqB;QAC3BN,MAAM,CAACO,IAAI,CAAC,UAAU;MACxB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK;QACxCF,KAAK,CAACE,KAAK,CAACE,OAAO;MACrB;IACF;IAEA,MAAMC,kBAAiB,GAAI,MAAAA,CAAA,KAAY;MACrC,MAAMC,QAAO,GAAI,IAAIpB,kBAAkB,CAAC;MACxC,IAAI;QACF,MAAMqB,MAAK,GAAI,MAAMpB,eAAe,CAACJ,IAAI,EAAEuB,QAAQ;QACnD,MAAMR,kBAAkB,CAACS,MAAM,CAACR,IAAI;QACpCC,KAAK,CAAC,4BAA4B;QAClCN,MAAM,CAACO,IAAI,CAAC,UAAU;MACxB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK;QACpDF,KAAK,CAACE,KAAK,CAACE,OAAO;MACrB;IACF;IAEA,MAAMN,kBAAiB,GAAI,MAAOC,IAAI,IAAK;MACzC,MAAMV,MAAM,CAACD,GAAG,CAACJ,EAAE,EAAE,OAAO,EAAEe,IAAI,CAACS,GAAG,CAAC,EAAE;QACvChB,KAAK,EAAEO,IAAI,CAACP,KAAK;QACjBiB,gBAAgB,EAAE;MACpB,CAAC;IACH;IAEA,OAAO;MACLjB,KAAK;MACLC,QAAQ;MACRE,YAAY;MACZU;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}